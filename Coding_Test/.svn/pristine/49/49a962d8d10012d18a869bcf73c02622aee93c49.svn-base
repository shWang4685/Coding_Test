package com.itest.testcases.teacher;

import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import org.apache.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.ITestContext;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import test.testng.webElements.teacher.HeaderIndex_Ele;
import test.testng.webElements.teacher.LeftHelp_Ele;
import com.itest.utils.GetBorwser;
import com.itest.utils.LogConfiguration;
import com.itest.utils.LoginCookie;
import com.itest.utils.SeleniumUtils;

public class TeacherHome_002_LeftHelp_Test {
    static Logger logger=Logger.getLogger(TeacherHome_002_LeftHelp_Test.class);

    //设置上下文
    ITestContext itestContext=null;
    WebDriver driver=null;
    //存句柄使用
    Set<String> handleSet=null;
    LeftHelp_Ele leftHelp_Ele =null;
    SeleniumUtils seleniumUtils=null;
    @BeforeClass
    public void beforeTest(ITestContext itestContext){
      
      this.driver=new GetBorwser().getWebDriver();
      this.itestContext=itestContext;
      itestContext.setAttribute("SELENIUM_DRIVER", driver);
      this.leftHelp_Ele=new LeftHelp_Ele(driver);
      //定义一个存句柄的数组,主要为了点击事件
      handleSet=new TreeSet<>();
      this.seleniumUtils=new SeleniumUtils(driver); 
      LogConfiguration.initLog(this.getClass().getSimpleName());
    }
    
    @Test
    public void LeftHelp(){
      //创建测试班级的名称
      String className="测试创建班级";
      //页面元素初始化
      
      HeaderIndex_Ele headerInderElm=new HeaderIndex_Ele(driver);
      logger.error("开始表演");
      //自动登录
      LoginCookie loginCookie=new LoginCookie();
      logger.info("开始添加登录cookie");
      loginCookie.getCookie(driver);
      
      //1.官网首页点击校园标签      
      seleniumUtils.click(headerInderElm.school(), handleSet,"官网首页校园标签");
      //2.校验页面中心是否展示 课程中心内容  
      seleniumUtils.isDisplayed(leftHelp_Ele.MyCourseOnCenter());

      //3.点击班级后，核对是否拉起对应班级
      List<WebElement> webElements=leftHelp_Ele.allClass();
      System.out.println("[-------------------]"+webElements.size());
      if(webElements.size()>0){
        checkClassName(webElements,driver);
      }
    
      
      //4.创建班级
      seleniumUtils.click(leftHelp_Ele.buildClass(), handleSet, "教师端创建班级");      
      seleniumUtils.pause(2000);

      //leftHelp_Ele.classNameInput传入参数是因为xpath 是动态
      seleniumUtils.sendKeys(leftHelp_Ele.classNameInput(webElements.size()+8),className);
      seleniumUtils.pause(2000);

      //点击课程选择下拉框
      seleniumUtils.click(leftHelp_Ele.selectCurriculumInput(webElements.size()+8), handleSet, "创建班级窗口，课程选择框");
      //查看下拉框中是否有某课程，有就创建，没有就提出错误
      boolean bool=false;    
      WebElement webCurriculum=null;
      String CurriculumName="python编程基础与应用";
      for(WebElement web:leftHelp_Ele.allCurriculum(webElements.size()+8)){
    
        if(web.getText().trim().contains(CurriculumName)){ 
          System.out.println(web);
          logger.info("有["+CurriculumName+"]这门课程");
          webCurriculum=web;
          bool=true;
          break;
        }
       
      }     
      if(bool){
        webCurriculum.click();
      }else{
        logger.error("无["+CurriculumName+"]这门课程,不能选中，请检查创建的课程名称参数");
        Assert.fail("无["+CurriculumName+"]这门课程,不能选中，请检查创建的课程名称参数");
      }
      seleniumUtils.click(leftHelp_Ele.confirmBuildClass(webElements.size()+8), handleSet, "确认创建班级");       
      //因创建班级，页面构造发生了变化
      driver.navigate().refresh();
      //5.重命名班级
      ranameClass(className);
      deleteClass("测试重命名输入");
    }  
    
    
    
    /**
     * 重命名班级
     */   
    public void ranameClass(String  className){         
      List<WebElement> webEs=leftHelp_Ele.allClass();
      String rename="测试重命名输入";
        for(int i=0;i<webEs.size();i++){
          if(webEs.get(i).getText().contains(className)){   
            seleniumUtils.click(webEs.get(i), handleSet, "点击班级");
            seleniumUtils.click(leftHelp_Ele.divHelp(i+1), handleSet, "点击左侧班级菜单按钮，准备重命名");
            seleniumUtils.pause(1000);
            seleniumUtils.click(leftHelp_Ele.reName(i+8), handleSet, "动态定位重命名标签使用的下标");
            seleniumUtils.click(leftHelp_Ele.reNameInput(), handleSet, "重命名输入框");
            seleniumUtils.clear(leftHelp_Ele.reNameInput(),"重命名输入框");
            seleniumUtils.sendKeys(leftHelp_Ele.reNameInput(),rename);
            seleniumUtils.click(leftHelp_Ele.confirmReNameButton(), handleSet, "确认重命名");   
            seleniumUtils.pause(1000);
            if(leftHelp_Ele.getOneClass(i+1).getText().contains(rename)){
              logger.info("重命名成功");
            }else{
              Assert.fail("重命名失败");
            }
            
          }
        }
      
    }
    
    
    public void deleteClass(String deleteClassName){
      driver.navigate().refresh();
      List<WebElement> webEs=leftHelp_Ele.allClass();

      for(int i=0;i<webEs.size();i++){
        System.out.println("进来了");
        if(webEs.get(i).getText().contains(deleteClassName)){  
          System.out.println("看看是不是又进来了");
          seleniumUtils.click(webEs.get(i), handleSet, "点击班级");
          seleniumUtils.click(leftHelp_Ele.divHelp(i+1), handleSet, "点击左侧班级菜单按钮，准备删除");
          seleniumUtils.pause(1000);         
          seleniumUtils.click(leftHelp_Ele.deleteClass(i+8), handleSet, "动态定位删除班级标签使用的下标");
          seleniumUtils.click(leftHelp_Ele.confirmDelete(), handleSet, "确认删除该班级");
          driver.navigate().refresh();
          //删除成功后，虚拟机记录的webEs 大小还是原来的大小，因此这里是要重新赋值的
          webEs=leftHelp_Ele.allClass();

          deleteClass(deleteClassName);  
        }

      }
    }
     
    
    
    
    
    
    
    /**
     * 校验班级是否能够拉起
     * @param webElements
     */
    public static  void checkClassName(List<WebElement> webElements,WebDriver driver){
      LeftHelp_Ele leftHelp_Ele =new LeftHelp_Ele(driver);
      for(WebElement e:webElements){
        String className=e.getText();
        e.click();
        try {
          Thread.sleep(500);
        } catch (InterruptedException e1) {
          // TODO Auto-generated catch block
          e1.printStackTrace();
        }
        //显示等待    
        
        String centerClassName=leftHelp_Ele.centerClassName().getText();
        
        if(!className.contains(centerClassName)){
          logger.error("[点击班级：]"+className+"出现错误，名字核对错误");
          Assert.fail("[点击班级：]"+className+"出现错误，名字核对错误");        
        }
        logger.info("["+centerClassName+"]："+"校对成功");
      }
    }
}
